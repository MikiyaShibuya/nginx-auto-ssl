services:
  nginx-proxy:
    image: nginx
    container_name: nginx-proxy
    volumes:
      - ./conf.d/template:/etc/nginx/conf.d/template
      - ./conf.d/include:/etc/nginx/conf.d/include
      - ./log:/var/log/nginx
      - ./html:/usr/share/nginx/html
      - ./letsencrypt:/etc/letsencrypt
    ports:
      - 80:80
      - 443:443
    environment:
      TZ: Asia/Tokyo
      DOMAIN_NAME: ${DOMAIN_NAME:?}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always
    entrypoint: /bin/sh -c
    command:
      - |

        envsubst < /etc/nginx/conf.d/template/initial.conf > /etc/nginx/conf.d/default.conf
        nginx

        while :
        do
          if [ -f /etc/letsencrypt/live/${DOMAIN_NAME}/fullchain.pem ]; then
            break
          else
            echo "Waiting for certbot to generate the certificate"
            sleep 5s
          fi
        done

        echo "The generated certificate is found"
        echo " ** Starting production nginx **"
        envsubst '$$DOMAIN_NAME' < /etc/nginx/conf.d/template/default.conf > /etc/nginx/conf.d/default.conf
        envsubst '$$DOMAIN_NAME' < /etc/nginx/conf.d/template/common_setting > /etc/nginx/conf.d/common_setting
        nginx -s reload # Reload nginx to apply the new certificate

        while :
        do
          sleep 36h & wait $${!}
          nginx -s reload
        done


  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./html:/usr/share/nginx/html
      - ./letsencrypt:/etc/letsencrypt
      - ./log_letsencrypt:/var/log/letsencrypt
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME:?}
      CERTONLY_DOMAINS: ${CERTONLY_DOMAINS:?}
      DRY_RUN_CERTONLY: ${DRY_RUN_CERTONLY:-false}
      DRY_RUN_RENEW: ${DRY_RUN_RENEW:-false}
    restart: always
    entrypoint: /bin/sh -c
    command:
      - |

        # certonly when the certificate is not found
        if [ ! -f /etc/letsencrypt/live/${DOMAIN_NAME}/fullchain.pem ]; then
          echo "Certificate not found, generating a new one"
          certbot certonly \
            --webroot \
            -w /usr/share/nginx/html/ \
            -n --agree-tos \
            ${CERTONLY_DOMAINS} \
            $$($$DRY_RUN_CERTONLY && echo --dry-run)
        fi

        trap exit TERM
        while :
        do
          sleep 12h & wait $${!};
          certbot renew $$($$DRY_RUN_RENEW && echo --dry-run)
        done
